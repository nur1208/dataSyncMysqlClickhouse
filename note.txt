- {DONE} install packages:
        - pymysqlreplication 
        - clickhouse-driver
        - canal-python
        - kafka-python
        - Faker
- {DONE} set up and start servers:
        - {DONE} canal
        - {DONE} mysql 5.7
        - {DONE} zookeeper
        - {DONE} kafka
        - {DONE} kafka graphic user manager
        - {DONE} clickhouse
- {DONE} create mysql actions simulator functionality [insert| delete | update]: 
        - {DONE} insert data to mysql every [2|4|6] seconds
        - {DONE} update data from mysql every [3|6|9] seconds
        - {DONE} delete data from mysql every [4|8|12] seconds
- {DONE} create one topic with one partition in kafka server
- {DONE} move data in mysql before listening to Mysql changes
- {DONE} let clickhouse Consume data from kafka server  
- {DONE} creating convertMysqlDataTypeClickhouse function
- {DONE} listening to Mysql changes using canal-python
- {DONE} produce binlog data to kafka 
- {DONE} create clickhouseConsumer function part 1
- {DONE} creating clickhouseConsumer function part 2 and creating createClickhouseSchema
- {DONE} creating  listeningToMysqlChanges function
- {DONE} creating mainDataSynchronization function to call the following functions: clickhouseConsumer, moveData, listeningToMysqlChanges part 1 
- {TODO} creating mainDataSynchronization function to call the following functions: clickhouseConsumer, moveData, listeningToMysqlChanges part 2 


- note use clickhouse 22.1.4.30 the new version doesn't work
- NOTE create ten producer and each producer send 10 columns to partition 
        the total columns is 100 (this is just example) and ten Consumer
        producer1 send 10 columns to partition1 and consumer1 consume data
        at the same time producer2 send the next 10 columns to partition2 and consumer2 consume data
        ....
        ....
        ....
        at the same time producerN send the next 10 columns to partitionN and consumerN consume data




not important
- {TODO} replicate mysql data to kafka's topic using mysql-replication
- {TODO} creating get getUserInput function:{mysqlDB, mysqlTable, clickhouseDB, clickhouseTable, kafkaTopic, KafkaGroup}